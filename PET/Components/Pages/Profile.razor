@page "/profile"

@using PET.Models
@using PET.Interfaces
@using PET.Services
@using Blazored.Toast.Services
@using PET.Helper

@inject PreferencesStoreClone Storage
@inject MapUser MapUser
@inject NavigationManager Navigation
@inject IToastService ToastService

@inject PageTitleService PageTitleService

@inject ICurrency CurrencyService
@inject IUser UserService
@inject ICurrency CurrencyService

<div class="p-6 bg-white mx-auto max-w-4xl rounded-lg border-2 border-[#006B6B] shadow-md">
    <div class="mb-6 text-center">
        <h2 class="text-gray-800 text-3xl font-semibold">User Profile</h2>
    </div>

    @if (loggedInUser != null)
    {
        <div class="gap-6 pl-32 mt-12 mx-auto grid grid-cols-1 md:grid-cols-2">
            <!-- User Info -->
            <div class="space-y-4">
                <div>
                    <label class="text-gray-600 font-medium">User Name</label>
                    <p class="text-gray-800 font-semibold">@loggedInUser?.UserName</p>
                </div>
                <div>
                    <label class="text-gray-600 font-medium">Full Name</label>
                    <p class="text-gray-800 font-semibold">@loggedInUser?.Name</p>
                </div>
                <div>
                    <label class="text-gray-600 font-medium">Email</label>
                    <p class="text-gray-800 font-semibold">@loggedInUser?.Email</p>
                </div>
                <div>
                    <label class="text-gray-600 font-medium">Phone</label>
                    <p class="text-gray-800 font-semibold">@loggedInUser?.Phone</p>
                </div>
                <div>
                    <label class="text-gray-600 font-medium">Gender</label>
                    <p class="text-gray-800 font-semibold">@loggedInUser?.Gender</p>
                </div>
                <div>
                    <label class="text-gray-600 font-medium">Address</label>
                    <p class="text-gray-800 font-semibold">@loggedInUser?.Address</p>
                </div>
            </div>

            <!-- Currency & Balance -->
            <div class="space-y-4">
                <div>
                    <label class="text-gray-600 font-medium">Currency</label>
                    <p class="text-gray-800 font-semibold">@loggedInUser?.Currency.Name @loggedInUser?.Currency.Code</p>
                </div>
                <div>
                    <label class="text-gray-600 font-medium">Balance</label>
                    <p class="text-gray-800 font-semibold">@loggedInUser?.CurrencyCode @loggedInUser?.Balance.ToString("F2")</p>
                </div>
                <div>
                    <label class="text-gray-600 font-medium">Date Joined</label>
                    <p class="text-gray-800 font-semibold">@loggedInUser?.Date_Created.ToString("MMMM dd, yyyy")</p>
                </div>
            </div>
        </div>
    }

    <div class="mt-6 text-center">
        <button class="px-4 py-2 text-white rounded-md bg-[#006b6b] hover:bg-blue-700" @onclick="ShowEditModal">Edit Profile</button>
    </div>
</div>

<!-- Edit Profile Modal -->
@if (isEditModalVisible)
{
    <div class="inset-0 bg-gray-600 fixed z-50 flex items-center justify-center bg-opacity-50">
        <div class="bg-white p-6 w-1/2 rounded-md shadow-lg">
            <h3 class="text-gray-700 text-2xl font-semibold">Edit Profile</h3>
            <div class="mt-4">
                <label class="text-gray-700 block text-lg font-medium">Username:</label>
                <input type="text" @bind="loggedInUser.UserName"
                       class="border-gray-300 p-2 text-gray-800 w-full rounded-md border focus:outline-none focus:ring-2 focus:ring-[#3A8C8C]" />
            </div>
            <div class="mt-4">
                <label class="text-gray-600 font-medium">Full Name</label>
                <input type="text" class="p-2 w-full rounded-md border" @bind="loggedInUser.Name" />
            </div>
            <div class="mt-4">
                <label class="text-gray-600 font-medium">Email</label>
                <input type="email" class="p-2 w-full rounded-md border" @bind="loggedInUser.Email" />
            </div>
            <div class="mt-4">
                <label class="text-gray-600 font-medium">Phone</label>
                <input type="tel" class="p-2 w-full rounded-md border" @bind="loggedInUser.Phone" />
            </div>
            <div class="mt-4">
                <label class="text-gray-600 font-medium">Address</label>
                <input type="text" class="p-2 w-full rounded-md border" @bind="loggedInUser.Address" />
            </div>
            <div class="mt-4">
                <label class="text-gray-600 font-medium">Gender</label>
                <select class="p-2 w-full rounded-md border" @bind="loggedInUser.Gender">
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                    <option value="Other">Other</option>
                </select>
            </div>
            <div>
                <label for="Currency" class="text-gray-700 block text-lg font-medium">Currency:</label>
                <InputSelect id="Currency" @bind-Value="loggedInUser.CurrencyCode"
                             class="border-gray-300 p-2 text-gray-800 w-full rounded-md border focus:outline-none focus:ring-2 focus:ring-[#3A8C8C]">
                    <option value="">-- Select Currency --</option>
                    @foreach (var currency in Currencies)
                    {
                        <option value="@currency.Code">@currency.Name (@currency.Code)</option>
                    }
                </InputSelect>
            </div>

            <div class="mt-4 text-center">
                <button class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700" @onclick="SaveProfile">Save</button>
                <button class="px-4 py-2 bg-gray-400 text-white ml-4 rounded-md hover:bg-gray-500" @onclick="CloseEditModal">Cancel</button>
            </div>
        </div>
    </div>
}

@code {
    private Users loggedInUser = null;
    private List<Currencies> Currencies { get; set; } = new List<Currencies>();
    private bool isEditModalVisible = false;

    protected override async Task OnInitializedAsync()
    {
        PageTitleService.PageTitle = "User Profile";
        Currencies = await CurrencyService.LoadAllCurrenciesAsync() ?? new List<Currencies>();
        loggedInUser = await MapUser.GetUserByUsernameAsync(Storage);
        if (loggedInUser == null)
        {
            Navigation.NavigateTo("/login");
        }
    }

    private void ShowEditModal()
    {
        isEditModalVisible = true;
    }

    private void CloseEditModal()
    {
        isEditModalVisible = false;
    }

    private async Task SaveProfile()
    {
        try
        {
            await UserService.UpdateUserAsync(loggedInUser);
            ToastService.ShowSuccess("Profile updated successfully!");
            CloseEditModal(); // Close modal after saving
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"Error updating profile: {ex.Message}");
        }
    }

}

