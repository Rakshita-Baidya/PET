@inherits LayoutComponentBase
@using Blazored.Toast.Services
@using PET.Models
@using PET.Interfaces
@using PET.Services
@using PET.Helper

@inject IUser UserService
@inject NavigationManager Navigation
@inject IToastService ToastService;
@inject PreferencesStoreClone Storage
@inject MapUser MapUser
@using Blazored.Toast.Configuration

<BlazoredToasts Position="ToastPosition.TopRight"
                Timeout="5"
                ShowProgressBar="@true"
                ShowCloseButton="@true"
                MaxToastCount="3"/>

@if (IsLoggedIn)
{
    <div class="bg-gray-100 flex h-screen w-screen">
        <NavMenu />
        <div class="flex flex-1 flex-col">
            <Header />
            <main class="bg-white p-6 flex-1 overflow-y-auto">
                @Body
            </main>
        </div>
    </div>
}
else
{
    <main class="h-full min-h-screen items-center justify-center bg-gradient-to-l from-[#e9efef] to-[#006B6B]">
        @Body
    </main>
}

@code {
    bool IsLoggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        await UpdateLoginStatusAsync();

        Storage.OnChange += async () =>
        {
            await UpdateLoginStatusAsync();
            StateHasChanged();
        };
    }

    private async Task UpdateLoginStatusAsync()
    {
        var loggedInUser = await MapUser.GetUserByUsernameAsync(Storage);

        IsLoggedIn = loggedInUser != null;
    }

    public void Dispose()
    {
        Storage.OnChange -= async () => await UpdateLoginStatusAsync();
    }
}
